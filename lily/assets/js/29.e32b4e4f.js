(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{382:function(s,t,a){"use strict";a.r(t);var n=a(45),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"abp-中获取当前用户相关的信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abp-中获取当前用户相关的信息"}},[s._v("#")]),s._v(" ABP 中获取当前用户相关的信息")]),s._v(" "),a("p",[s._v("当前用户是指当前请求相关的用户。由于在 Web 程序中当前用户的信息的使用是非常常见的， ABP 对此做了一次封装。")]),s._v(" "),a("h2",{attrs:{id:"icurrentuser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icurrentuser"}},[s._v("#")]),s._v(" ICurrentUser")]),s._v(" "),a("p",[a("code",[s._v("ICurrentUser")]),s._v(" 是获取当前活动用户信息的主要服务。")]),s._v(" "),a("p",[s._v("通过构造函数注入的方式使用该服务")]),s._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("Volo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Abp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DependencyInjection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("Volo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Abp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("AbpDemo")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ITransientDependency")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICurrentUser")]),s._v(" _currentUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICurrentUser")]),s._v(" currentUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            _currentUser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" currentUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Guid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")])]),s._v(" userId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" _currentUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("公共基类已将此服务作为基属性注入。比如")]),s._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("Volo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Abp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("AbpDemo")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyAppService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationService")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Guid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")])]),s._v(" userId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" CurrentUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"属性-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-properties"}},[s._v("#")]),s._v(" 属性(Properties)")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("IsAuthenticated")]),s._v(" (bool) ：是否已登录认证。")]),s._v(" "),a("li",[a("strong",[s._v("Id")]),s._v(" (Guid?)：获取用户的Id，未登录时返回 "),a("code",[s._v("null")]),s._v(" 。")]),s._v(" "),a("li",[a("strong",[s._v("UserName")]),s._v(" (string)：获取用户的名称，未登录时返回 "),a("code",[s._v("null")]),s._v(" 。")]),s._v(" "),a("li",[a("strong",[s._v("TenantId")]),s._v(" (Guid?)：获取用户租户的Id，未分配租户时返回 "),a("code",[s._v("null")]),s._v("。")]),s._v(" "),a("li",[a("strong",[s._v("Email")]),s._v(" (string)：获取用户的 Email。")]),s._v(" "),a("li",[a("strong",[s._v("EmailVerified")]),s._v(" (bool)：是否已验证电子邮箱。")]),s._v(" "),a("li",[a("strong",[s._v("PhoneNumber")]),s._v(" (string)：获取用户手机号码。")]),s._v(" "),a("li",[a("strong",[s._v("PhoneNumberVerified")]),s._v(" (bool)：是否已验证手机号。")]),s._v(" "),a("li",[a("strong",[s._v("Roles")]),s._v(" (string[])：获取当前用户拥有的角色名。")])]),s._v(" "),a("h3",{attrs:{id:"方法-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-methods"}},[s._v("#")]),s._v(" 方法(Methods)")]),s._v(" "),a("p",[a("code",[s._v("ICurrentUser")]),s._v(" 是在 "),a("code",[s._v("ICurrentPrincipalAccessor")]),s._v(" 基础上对 "),a("code",[s._v("claims")]),s._v(" 处理实现的。上述所有属性实际上都是从当前经过身份验证的用户的 "),a("code",[s._v("claims")]),s._v(" 中检索得到的。"),a("code",[s._v("ICurrentUser")]),s._v(" 对于检索功能做了些封装。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("FindClaim")]),s._v(": 获取具有给定名称的 "),a("code",[s._v("Claim")]),s._v("。如果未找到，则返回 "),a("code",[s._v("null")]),s._v("。")]),s._v(" "),a("li",[a("strong",[s._v("FindClaims")]),s._v(": 获取具有给定名称的所有 "),a("code",[s._v("Claim")]),s._v("（允许多个具有相同的名称）。")]),s._v(" "),a("li",[a("strong",[s._v("GetAllClaims")]),s._v(": 获取所有的 "),a("code",[s._v("Claim")]),s._v("。")]),s._v(" "),a("li",[a("strong",[s._v("IsInRole")]),s._v(": A shortcut method to check if the current user is in the specified role.")])]),s._v(" "),a("p",[s._v("除了这些标准方法外，还有一些扩展方法：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("FindClaimValue")]),s._v(": 获取具有给定名称的 "),a("code",[s._v("Claim")]),s._v(" 的值，如果找不到则为 "),a("code",[s._v("null")]),s._v(" 。它有一个泛型重载将值强制转换为特定类型。")]),s._v(" "),a("li",[a("strong",[s._v("GetId")]),s._v(": 返回当前用户的Id。如果当前用户没有登录会抛出异常。")])]),s._v(" "),a("h2",{attrs:{id:"icurrentprincipalaccessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icurrentprincipalaccessor"}},[s._v("#")]),s._v(" ICurrentPrincipalAccessor")]),s._v(" "),a("p",[a("code",[s._v("ICurrentPrincipalAccessor")]),s._v(" 是在需要当前用户的主体时使用的服务。")]),s._v(" "),a("p",[s._v("对于 "),a("code",[s._v("Web")]),s._v(" 应用程序，它获取当前用户的 "),a("code",[s._v("HttpContext")]),s._v(" 属性。对于非web应用程序，它返回当前主线程.。")]),s._v(" "),a("blockquote",[a("p",[s._v("通常不需要这个低级别的服务")])]),s._v(" "),a("p",[s._v("其接口声明内容也极其简单")]),s._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICurrentPrincipalAccessor")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("ClaimsPrincipal")]),s._v(" Principal "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("IDisposable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Change")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClaimsPrincipal")]),s._v(" principal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("code",[s._v("Change")]),s._v(" 方法用于更改当前用户主体内容")]),s._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyAppService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationService")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICurrentPrincipalAccessor")]),s._v(" _currentPrincipalAccessor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyAppService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICurrentPrincipalAccessor")]),s._v(" currentPrincipalAccessor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        _currentPrincipalAccessor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" currentPrincipalAccessor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" newPrincipal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("ClaimsPrincipal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("ClaimsIdentity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("Claim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("Claim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AbpClaimTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Guid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("NewGuid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("Claim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AbpClaimTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"john"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("Claim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MyCustomCliam"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"42"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_currentPrincipalAccessor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Change")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newPrincipal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" userName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" CurrentUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//returns "john"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"abpclaimtypes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abpclaimtypes"}},[s._v("#")]),s._v(" AbpClaimTypes")]),s._v(" "),a("p",[a("code",[s._v("AbpClaimTypes")]),s._v(" 是一个静态类，用于定义标准的 "),a("code",[s._v("Claim")]),s._v(" 名称，其内大部分引用的 "),a("code",[s._v("ClaimTypes")]),s._v(" 类中的常量值。")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("AbpClaimTypes")]),s._v(" 是 ABP 定义的，"),a("code",[s._v("ClaimTypes")]),s._v(" 是微软定义的。")])]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("https://docs.abp.io/en/abp/latest/CurrentUser")])])}),[],!1,null,null,null);t.default=e.exports}}]);